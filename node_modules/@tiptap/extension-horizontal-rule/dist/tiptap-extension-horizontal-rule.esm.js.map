{"version":3,"file":"tiptap-extension-horizontal-rule.esm.js","sources":["../src/horizontal-rule.ts"],"sourcesContent":["import {\n  Node,\n  nodeInputRule,\n  mergeAttributes,\n} from '@tiptap/core'\nimport { TextSelection } from 'prosemirror-state'\n\nexport interface HorizontalRuleOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    horizontalRule: {\n      /**\n       * Add a horizontal rule\n       */\n      setHorizontalRule: () => ReturnType,\n    }\n  }\n}\n\nexport const HorizontalRule = Node.create<HorizontalRuleOptions>({\n  name: 'horizontalRule',\n\n  defaultOptions: {\n    HTMLAttributes: {},\n  },\n\n  group: 'block',\n\n  parseHTML() {\n    return [\n      { tag: 'hr' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['hr', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)]\n  },\n\n  addCommands() {\n    return {\n      setHorizontalRule: () => ({ chain }) => {\n        return chain()\n          // remove node before hr if it’s an empty text block\n          .command(({ tr, dispatch }) => {\n            const { selection } = tr\n            const { empty, $anchor } = selection\n            const isEmptyTextBlock = $anchor.parent.isTextblock\n              && !$anchor.parent.type.spec.code\n              && !$anchor.parent.textContent\n\n            if (!empty || !isEmptyTextBlock || !dispatch) {\n              return true\n            }\n\n            const posBefore = $anchor.before()\n\n            tr.deleteRange(posBefore, posBefore + 1)\n\n            return true\n          })\n          .insertContent({ type: this.name })\n          // add node after hr if it’s the end of the document\n          .command(({ tr, dispatch }) => {\n            if (dispatch) {\n              const { parent, pos } = tr.selection.$from\n              const posAfter = pos + 1\n              const nodeAfter = tr.doc.nodeAt(posAfter)\n\n              if (!nodeAfter) {\n                const node = parent.type.contentMatch.defaultType?.create()\n\n                if (node) {\n                  tr.insert(posAfter, node)\n                  tr.setSelection(TextSelection.create(tr.doc, posAfter))\n                }\n              }\n\n              tr.scrollIntoView()\n            }\n\n            return true\n          })\n          .run()\n      },\n    }\n  },\n\n  addInputRules() {\n    return [\n      nodeInputRule(/^(?:---|—-|___\\s|\\*\\*\\*\\s)$/, this.type),\n    ]\n  },\n})\n"],"names":[],"mappings":";;;MAsBa,cAAc,GAAG,IAAI,CAAC,MAAM,CAAwB;IAC/D,IAAI,EAAE,gBAAgB;IAEtB,cAAc,EAAE;QACd,cAAc,EAAE,EAAE;KACnB;IAED,KAAK,EAAE,OAAO;IAEd,SAAS;QACP,OAAO;YACL,EAAE,GAAG,EAAE,IAAI,EAAE;SACd,CAAA;KACF;IAED,UAAU,CAAC,EAAE,cAAc,EAAE;QAC3B,OAAO,CAAC,IAAI,EAAE,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC,CAAA;KAC5E;IAED,WAAW;QACT,OAAO;YACL,iBAAiB,EAAE,MAAM,CAAC,EAAE,KAAK,EAAE;gBACjC,OAAO,KAAK,EAAE;;qBAEX,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE;oBACxB,MAAM,EAAE,SAAS,EAAE,GAAG,EAAE,CAAA;oBACxB,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,SAAS,CAAA;oBACpC,MAAM,gBAAgB,GAAG,OAAO,CAAC,MAAM,CAAC,WAAW;2BAC9C,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;2BAC9B,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,CAAA;oBAEhC,IAAI,CAAC,KAAK,IAAI,CAAC,gBAAgB,IAAI,CAAC,QAAQ,EAAE;wBAC5C,OAAO,IAAI,CAAA;qBACZ;oBAED,MAAM,SAAS,GAAG,OAAO,CAAC,MAAM,EAAE,CAAA;oBAElC,EAAE,CAAC,WAAW,CAAC,SAAS,EAAE,SAAS,GAAG,CAAC,CAAC,CAAA;oBAExC,OAAO,IAAI,CAAA;iBACZ,CAAC;qBACD,aAAa,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;;qBAElC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE;;oBACxB,IAAI,QAAQ,EAAE;wBACZ,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,KAAK,CAAA;wBAC1C,MAAM,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAA;wBACxB,MAAM,SAAS,GAAG,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;wBAEzC,IAAI,CAAC,SAAS,EAAE;4BACd,MAAM,IAAI,GAAG,MAAA,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,0CAAE,MAAM,EAAE,CAAA;4BAE3D,IAAI,IAAI,EAAE;gCACR,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAA;gCACzB,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAA;6BACxD;yBACF;wBAED,EAAE,CAAC,cAAc,EAAE,CAAA;qBACpB;oBAED,OAAO,IAAI,CAAA;iBACZ,CAAC;qBACD,GAAG,EAAE,CAAA;aACT;SACF,CAAA;KACF;IAED,aAAa;QACX,OAAO;YACL,aAAa,CAAC,6BAA6B,EAAE,IAAI,CAAC,IAAI,CAAC;SACxD,CAAA;KACF;CACF;;;;"}