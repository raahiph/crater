import { Plugin, UserConfig } from 'vite';

declare type VitePlugin = Plugin | ((...params: any[]) => Plugin);
interface PhpConfiguration {
    build_path?: string;
    dev_url?: string;
    entrypoints?: false | string | string[];
    aliases?: Record<string, string>;
    public_directory?: string;
}
/**
 * A plugin enabling HMR for Blade files.
 */
declare const laravel: () => Plugin;
declare class ViteConfiguration {
    publicDir: string;
    build: UserConfig['build'];
    server: UserConfig['server'];
    plugins: UserConfig['plugins'];
    base: UserConfig['base'];
    resolve: UserConfig['resolve'];
    constructor(config?: UserConfig, artisan?: PhpConfiguration);
    /**
     * Defines the directory which contains static assets.
     * Defaults to resources/static.
     */
    withStaticAssets(publicDir: string): this;
    /**
     * Defines the directory in which the assets will be generated.
     * Defaults to public/build.
     */
    withOutput(outDir: string): this;
    /**
     * Adds an entry point.
     *
     * @example
     * export default defineConfig()
     *	.withEntry("resources/js/app.js")
     */
    withEntry(...entries: string[]): this;
    /**
     * Adds entry points.
     *
     * @example
     * export default defineConfig()
     *	.withEntries("resources/js/app.js", "resources/js/admin.js")
     */
    withEntries(...entries: string[]): this;
    /**
     * Adds the given Vite plugin.
     *
     * @example
     * import vue from "@vitejs/plugin-vue"
     *
     * export default defineConfig()
     *	.withPlugin(vue)
     */
    withPlugin(plugin: VitePlugin): this;
    /**
     * Adds the given Vite plugins.
     *
     * @example
     * import vue from "@vitejs/plugin-vue"
     * import components from "vite-plugin-components"
     *
     * export default defineConfig()
     *	.withPlugins(vue, components)
     */
    withPlugins(...plugins: VitePlugin[]): this;
    /**
     * Merges in the given Vite configuration.
     */
    merge(config: UserConfig): this;
}
/**
 * Creates a Vite configuration object, simplified for use with
 * Laravel.
 *
 * @deprecated Use `defineConfig` instead
 */
declare function createViteConfiguration(): ViteConfiguration;
/**
 * Creates a Vite configuration object, simplified for use with
 * Laravel.
 *
 * @see https://github.com/innocenzi/laravel-vite
 */
declare function defineConfig(config?: UserConfig): ViteConfiguration;
declare const _default: ViteConfiguration;

export default _default;
export { ViteConfiguration, createViteConfiguration, defineConfig, laravel };
