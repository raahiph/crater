import { PropType } from "vue";
import { ColorInput, ColorFormat } from "../color";
declare const _default: import("vue").DefineComponent<{
    color: {
        type: PropType<ColorInput>;
        default: string;
    };
    format: {
        type: PropType<ColorFormat>;
    };
    disableAlpha: BooleanConstructor;
    disableLight: BooleanConstructor;
    disableHue: BooleanConstructor;
    disableHistory: BooleanConstructor;
    disableClipboard: BooleanConstructor;
    displayCurrentColor: {
        type: BooleanConstructor;
        default: boolean;
    };
    historyRound: BooleanConstructor;
    copyBtnText: {
        type: StringConstructor;
        default: string;
    };
    backBtnText: {
        type: StringConstructor;
        default: string;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("change" | "update:color")[], "change" | "update:color", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    color?: unknown;
    format?: unknown;
    disableAlpha?: unknown;
    disableLight?: unknown;
    disableHue?: unknown;
    disableHistory?: unknown;
    disableClipboard?: unknown;
    displayCurrentColor?: unknown;
    historyRound?: unknown;
    copyBtnText?: unknown;
    backBtnText?: unknown;
} & {
    color: ColorInput;
    disableAlpha: boolean;
    disableLight: boolean;
    disableHue: boolean;
    disableHistory: boolean;
    disableClipboard: boolean;
    displayCurrentColor: boolean;
    historyRound: boolean;
    copyBtnText: string;
    backBtnText: string;
} & {
    format?: ColorFormat | undefined;
}> & {
    onChange?: ((...args: any[]) => any) | undefined;
    "onUpdate:color"?: ((...args: any[]) => any) | undefined;
}, {
    color: ColorInput;
    disableAlpha: boolean;
    disableLight: boolean;
    disableHue: boolean;
    disableHistory: boolean;
    disableClipboard: boolean;
    displayCurrentColor: boolean;
    historyRound: boolean;
    copyBtnText: string;
    backBtnText: string;
}>;
export default _default;
