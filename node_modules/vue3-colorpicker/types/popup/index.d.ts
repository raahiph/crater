import { PropType } from "vue";
import { ColorInput } from "../color";
export declare type PickerMode = "fk" | "chrome" | "ele";
declare const _default: import("vue").DefineComponent<{
    color: {
        type: PropType<ColorInput>;
        default: string;
    };
    round: {
        type: BooleanConstructor;
    };
    mode: {
        type: PropType<PickerMode>;
        default: string;
    };
    pickerProps: {
        type: ObjectConstructor;
        default: () => {};
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("change" | "update:color")[], "change" | "update:color", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    color?: unknown;
    round?: unknown;
    mode?: unknown;
    pickerProps?: unknown;
} & {
    color: ColorInput;
    round: boolean;
    mode: PickerMode;
    pickerProps: Record<string, any>;
} & {}> & {
    onChange?: ((...args: any[]) => any) | undefined;
    "onUpdate:color"?: ((...args: any[]) => any) | undefined;
}, {
    color: ColorInput;
    round: boolean;
    mode: PickerMode;
    pickerProps: Record<string, any>;
}>;
export default _default;
